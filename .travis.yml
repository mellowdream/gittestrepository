# Build your project for WIN/MAC/LINUX using Travis CI [https://travis-ci.com/]
# Builds using Travis and publishes to Github
# REF: https://qvault.io/2019/08/08/automatic-cross-platform-deployments-with-electron-on-a-ci-server-travis/
# REF: https://docs.github.com/en/github/administering-a-repository/managing-releases-in-a-repository

# =============================
# CONFIG
# =============================
language: node_js

node_js:
  - '12'

notifications:
  email: false

# Run this script ONLY on pull requests and merges into 'master' and 'prod' branches
branches:
  except:
    - "/^v\\d+\\.\\d+\\.\\d+$/"
  only:
    - master
    - prod

# =============================
# JOBS
# =============================
# Run two parallel builds: Mac and Linux
# Linux build will use wine & build windows and linux apps
jobs:
  include:
    - os: osx
      osx_image: xcode10.2
      language: node_js
      node_js: "12"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    - os: linux
      dist: xenial
      sudo: required
      services: docker
      language: generic

    # Windows currently doesn't support encrypted variables.
    # Once supported uncomment this out & remove build with Docker
    #- os: windows
    #  language: node_js
    #  node_js: "12"


# =============================
# CACHE
# =============================

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

# Cache files for faster builds
cache:
  npm: true
  yarn: true
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder


# =============================
# INSTALL
# =============================

# add git lfs for large file support
before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.1/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-2.3.1.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1
      export PATH="/tmp/git-lfs:$PATH"
    fi

install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew install yarn;
    fi


# =============================
# RUN SCRIPTS
# =============================

before_script:
  - git lfs pull

# on PRs and merges to master and prod run tests and build the app
script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      docker run --rm \
        --env-file <(env | grep -vE '\r|\n' | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS_TAG|TRAVIS|TRAVIS_REPO_|TRAVIS_BUILD_|TRAVIS_BRANCH|TRAVIS_PULL_REQUEST_|APPVEYOR_|CSC_|GH_|GITHUB_|BT_|AWS_|STRIP|BUILD_') \
        -v ${PWD}:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine \
        /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --linux --win"
    elif [ "$TRAVIS_OS_NAME" == "windows" ]; then
      npm install;
      npm run release;
    else
      yarn install;
      yarn release;
    fi


# =============================
# DEPLOY
# =============================

before_deploy:
  # Set up git user name and tag this commit
  - git config --local user.name "thinkdj"
  - git config --local user.email "think.dj@gmail.com"
  - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
  - git tag $TRAVIS_TAG

# DEPLOY using script
# only deploy to github on a merge to the prod branch
#deploy:
#  provider: script
#  script: bash deploy.travis.sh
#  skip_cleanup: true
#  on:
#    branch: master

# DEPLOY using `releases`
# Deploy to Github Releases
deploy:
  provider: releases
  skip_cleanup: true
  api_key: $GH_TOKEN
  draft: false
  file_glob: true
  file:
    - "dist/*.exe"
    - "dist/*.zip"
    - "dist/*.7z"
    - "dist/*.AppImage"
    - "dist/*.deb"
    - "dist/*.dmg"
    - "dist/*.blockmap"
    - "dist/*.yml"
  on:
    tags: true
